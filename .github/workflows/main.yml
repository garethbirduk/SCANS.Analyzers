name: workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Set permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Print .NET SDK version
      run: dotnet --version

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Install modules
      run: yarn --prefer-offline

    # Add NuGet repository for publishing
    - name: NuGet set access
      if: github.ref == 'refs/heads/main'
      run: dotnet nuget add source --username ${{ github.actor }} --password ${{ github.token }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/garethbirduk/index.json"

    # Deploy the package to NuGet
    - name: NuGet deploy Package
      if: github.ref == 'refs/heads/main'
      run: dotnet nuget push ./SCARS.Analyzers/bin/Release/**/*.nupkg --source "github" --api-key ${{ secrets.GH_APIKEY }} --skip-duplicate
